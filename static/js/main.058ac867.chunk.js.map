{"version":3,"sources":["components/Buttons.tsx","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["Button","name","clickHandler","type","onClick","className","GoodsList","state","isReversed","sortBy","reverse","setState","sortAlphabetically","sortByLength","reset","this","visibleGoodsList","props","goodsList","sort","a","b","localeCompare","length","map","item","Component","goodsFromServer","App","isStarted","ReactDOM","render","document","getElementById"],"mappings":"kOAOaA,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OAC/B,wBACEC,KAAK,SACLC,QAASF,EACTG,UAAU,cAHZ,SAKGJ,KCDQK,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,OAAQ,IAHZ,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAPjD,EAUEI,mBAAqB,WACnB,EAAKD,SAAS,CAAEF,OAAQ,oBAX5B,EAcEI,aAAe,WACb,EAAKF,SAAS,CAAEF,OAAQ,YAf5B,EAkBEK,MAAQ,WACN,EAAKH,SAAS,CACZF,OAAQ,GACRD,YAAY,KArBlB,4CAyBE,WACE,MAA+BO,KAAKR,MAA5BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAEdO,EAAgB,YAAOD,KAAKE,MAAMC,WAmBxC,OAjBIT,GACFO,EAAiBG,MAAK,SAACC,EAAGC,GACxB,OAAQZ,GACN,IAAK,iBACH,OAAOW,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKXf,GACFQ,EAAiBN,UAIjB,qCACE,cAAC,EAAD,CACET,KAAK,UACLC,aAAca,KAAKL,UAErB,cAAC,EAAD,CACET,KAAK,sBACLC,aAAca,KAAKH,qBAErB,cAAC,EAAD,CACEX,KAAK,iBACLC,aAAca,KAAKF,eAErB,cAAC,EAAD,CACEZ,KAAK,QACLC,aAAca,KAAKD,QAErB,6BACGE,EAAiBQ,KAAI,SAAAC,GAAI,OACxB,6BACGA,GADMA,eAnErB,GAA+BC,aCPzBC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAOIC,E,4MACJrB,MAAe,CACbsB,WAAW,G,4CAGb,WAAU,IAAD,OACP,OACE,sBAAKxB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,4BACEU,KAAKR,MAAMsB,WACX,wBACE1B,KAAK,SACLC,QAAS,WACP,EAAKO,SAAS,CAAEkB,WAAW,KAE7BxB,UAAU,oBALZ,8BAUDU,KAAKR,MAAMsB,WAAa,cAAC,EAAD,CAAWX,UAAWS,W,GApBrCD,aA0BHE,IC7CfE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.058ac867.chunk.js","sourcesContent":["import { FC } from 'react';\n\ntype Props = {\n  name: string;\n  clickHandler(): void;\n};\n\nexport const Button: FC<Props> = ({ name, clickHandler }) => (\n  <button\n    type=\"button\"\n    onClick={clickHandler}\n    className=\"App__button\"\n  >\n    {name}\n  </button>\n);\n","import { Component } from 'react';\nimport { Button } from './Buttons';\n\ntype Props = {\n  goodsList: string[];\n};\n\ntype State = {\n  isReversed: boolean;\n  sortBy: string;\n};\n\nexport class GoodsList extends Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    sortBy: '',\n  };\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'alphabetically' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortBy } = this.state;\n\n    const visibleGoodsList = [...this.props.goodsList];\n\n    if (sortBy) {\n      visibleGoodsList.sort((a, b) => {\n        switch (sortBy) {\n          case 'alphabetically':\n            return a.localeCompare(b);\n          case 'length':\n            return a.length - b.length;\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      visibleGoodsList.reverse();\n    }\n\n    return (\n      <>\n        <Button\n          name=\"Reverse\"\n          clickHandler={this.reverse}\n        />\n        <Button\n          name=\"Sort alphabetically\"\n          clickHandler={this.sortAlphabetically}\n        />\n        <Button\n          name=\"Sort by length\"\n          clickHandler={this.sortByLength}\n        />\n        <Button\n          name=\"Reset\"\n          clickHandler={this.reset}\n        />\n        <ul>\n          {visibleGoodsList.map(item => (\n            <li key={item}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isStarted: boolean;\n};\n\nclass App extends Component<{}, State> {\n  state: State = {\n    isStarted: false,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">List of Goods</h1>\n        {!this.state.isStarted && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isStarted: true });\n            }}\n            className=\"App__button-start\"\n          >\n            Start a program!\n          </button>\n        )}\n        {this.state.isStarted && <GoodsList goodsList={goodsFromServer} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}